module tb_data_memory;

	// Define parameters for the testbench
	parameter MEM_DEPTH = 11;
	parameter MEM_WIDTH = 32;

	// Declare signals for the testbench
	logic clk;
	logic rst;
	logic [MEM_WIDTH-1:0] addr;
	logic [MEM_WIDTH-1:0] data_in;
	logic [MEM_WIDTH-1:0] data_out;

	// Instantiate the memory module
	data_memory #(.MEM_DEPTH(MEM_DEPTH), .MEM_WIDTH(MEM_WIDTH)) dut(
		.clk(clk),
		.rst(rst),
		.addr(addr),
		.data_in(data_in),
		.data_out(data_out)
	);

	// Create a clock generator
	always #5 clk = ~clk;

	// Initialize signals
	initial begin
		clk = 0;
		rst = 1;
		addr = 0;
		data_in = 0;
		data_out = 0;

		// Wait for the reset to deassert
		#10 rst = 0;

		// Write some data to the memory
		for (int i = 0; i < MEM_DEPTH; i++) begin
			addr = i;
			data_in = i + 1;
			#5;
		end

		// Read the data from the memory
		for (int i = 0; i < MEM_DEPTH; i++) begin
			addr = i;
			#5;
			$display("Data at address %d is %d", i, data_out);
		end
	end
	
endmodule